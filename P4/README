
Invocation
	.sp19 extension is implied, so dont add it.

	comp [file]	
ex
	./comp test1

	virtMach [file.asm]
ex
	./virtMach test1.asm


###################################################################


Details
The program(comp) is to parse the input, generate a parse tree, perform static semantics, and then generate a target file(.asm). Any error should display detailed message, including line number if available (depending on scanner).

The virtual machine runs the asm files.

The target name should be

out.asm if keyboard input
file.asm if file input. The base name matches that of the input file
The program has 2 parts to be properly generated:

Code generation
120
Storage allocation global option 30 (+20 for local)

Global - all variables allocated globally.
Local - variables outside of a block are scoped in the entire program, variables in a block are scoped in that block
Note that this does not have to match your static semantics but local storage will use the same mechanisms as local semantics.

Temporary variables can processed as global scope even when doing local scoping for user variables.

Upon success, only display the name of the target file generated and no other output. Upon error and the error message, no other display and no target should be generated.
